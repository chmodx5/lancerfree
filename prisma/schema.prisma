// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                String @id @default(cuid())
  first_name        String
  last_name         String
  username          String
  email             String @unique
  account_type      String
  password          String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  profile           Profile? 
  country           String
  skills            Skills[]  
  reviews           Reviews[]   
  projects          Projects[]
  bids              Bids[]
  messages          Messages[]
  winningBids       WinningBids?
}

model Profile {
  id                String @id @default(cuid())
  title             String
  description       String
  rating            Int
  success_rate      String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User @relation(fields: [userId], references: [id])
  userId            String @unique
     
}

model Projects {
  id                String @id @default(cuid())
  title             String
  description       String
  budget_min        Int
  budget_max        Int
  rating            Int
  success_rate      String
  country           String
  status            String
  project_progress  String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User @relation(fields: [userId], references: [id])
  userId            String @unique
  bids              Bids[]
  reviews           Reviews[]
  skills            Skills[]
  winningBids       WinningBids?
}

model Reviews {
  id                String @id @default(cuid())
  title             String
  description       String
  rating            Int
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  profile           User @relation(fields: [profileId], references: [id])
  profileId         String @unique
  project           Projects @relation(fields: [projectId], references: [id])
  projectId         String @unique
}

model Skills{
  id                String @id @default(cuid())
  title             String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User @relation(fields: [userId], references: [id]) 
  userId            String @unique
  projects          Projects @relation(fields: [projectsId], references: [id])
  projectsId        String @unique
}

model Countries {
  id                String @id @default(cuid())
  title             String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Bids {
  id                String @id @default(cuid())
  bid_amount        String
  delivered_in      String
  proposal          Int
  budget_max        Int
  project_progress  String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  project           Projects @relation(fields: [projectId], references: [id])
  projectId         String @unique
  user              User @relation(fields: [userId], references: [id])
  userId            String @unique
  winningBids        WinningBids?
}

model Messages {
  id                String @id @default(cuid())
  message           String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User @relation(fields: [userId], references: [id])
  userId            String @unique
}

model WinningBids {
  id                String @id @default(cuid())
  bid_id            Int
  project_id        Int
  bids              Bids @relation(fields: [userId], references: [id])
  bidId             String @unique
  project           Projects @relation(fields: [userId], references: [id])
  projectId         String @unique
  user              User @relation(fields: [userId], references: [id])
  userId            String @unique
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}